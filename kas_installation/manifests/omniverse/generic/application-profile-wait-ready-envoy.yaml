apiVersion: omniverse.nvidia.com/v1
kind: ApplicationProfile
metadata:
  name: default
spec:
  name: Default profile
  description: Updated memory and CPU settings.
  supportedApplications:
    - name: "usd-viewer"
      versions: 
        - "*"
  chartMappings:
    container: streamingKit.image.repository
    container_version: streamingKit.image.tag
    name: streamingKit.name
  chartValues:
    global:
      imagePullSecrets:
        - name: regcred
    streamingKit:
      image:
        repository: nvcr.io/nvidia/omniverse/usd-viewer
        pullPolicy: Always
        tag: '0.2.0'
      sessionId: session_id
      name: kit-app
      resources:
        limits:
          cpu: "3"
          memory: "20Gi"
          nvidia.com/gpu: "1"
        requests:
          nvidia.com/gpu: "1"
      env:
        - name: USD_PATH
          value: "/app/data/Forklift_A/Forklift_A01_PR_V_NVD_01.usd"
envoy:
        config: |
          node:
            id: node0
            cluster: envoy-cluster
          static_resources:
            listeners:
            - name: webrtc_signaling_listener
              address:
                socket_address:
                  address: 0.0.0.0
                  port_value: 49200
              filter_chains:
              - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: signaling_http
                    codec_type: AUTO
                    upgrade_configs:
                    - upgrade_type: websocket
                    route_config:
                      name: local_route
                      virtual_hosts:
                      - name: local_service
                        domains: ["*"]
                        routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service_cluster
                    http_filters:
                    - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format: |
                              [START_TIME: %START_TIME%]
                              REQUEST_METHOD: %REQ(:METHOD)%
                              PATH: %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
                              PROTOCOL: %PROTOCOL%
                              RESPONSE_CODE: %RESPONSE_CODE%
                              RESPONSE_FLAGS: %RESPONSE_FLAGS%
                              BYTES_RECEIVED: %BYTES_RECEIVED%
                              BYTES_SENT: %BYTES_SENT%
                              DURATION: %DURATION%
                              UPSTREAM_HOST: %UPSTREAM_HOST%
                              DOWNSTREAM_REMOTE_ADDRESS: %DOWNSTREAM_REMOTE_ADDRESS%
            - name: health_listener
              address:
                socket_address:
                  address: 0.0.0.0
                  port_value: 8080
              filter_chains:
              - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: health_check
                    codec_type: AUTO
                    route_config:
                      name: local_route
                      virtual_hosts:
                      - name: local_service
                        domains: ["*"]
                        routes:
                        - match:
                            prefix: "/health"
                          direct_response:
                            status: 200
                            body:
                              inline_string: "OK"
                    http_filters:
                    - name: envoy.filters.http.router
            - name: ready_listener
              address:
                socket_address:
                  address: 0.0.0.0
                  port_value: 8081
              filter_chains:
              - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ready_check
                    codec_type: AUTO
                    route_config:
                      name: local_route
                      virtual_hosts:
                      - name: local_service
                        domains: ["*"]
                        routes:
                        - match:
                            prefix: "/ready"
                          direct_response:
                            status: 200
                            body:
                              inline_string: "OK"
                    http_filters:
                    - name: envoy.filters.http.lua
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                        inline_code: |
                          local start_time = os.time()
                          function envoy_on_request(request_handle)
                            if os.time() - start_time < 60 then
                              request_handle:respond({[":status"] = "503"}, "Not ready yet")
                            end
                          end
                    - name: envoy.filters.http.router
            clusters:
            - name: service_cluster
              connect_timeout: 0.25s
              type: STATIC
              lb_policy: ROUND_ROBIN
              load_assignment:
                cluster_name: service_cluster
                endpoints:
                - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 49100  # Forwarding to the stream
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /ready
          port: 8081
        initialDelaySeconds: 20
        periodSeconds: 10
