{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "16898971009371758965"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "vnetAddressPrefix": {
      "type": "string"
    },
    "aksSubnetAddressPrefix": {
      "type": "string"
    },
    "wafSubnetAddressPrefix": {
      "type": "string"
    },
    "apimSubnetAddressPrefix": {
      "type": "string"
    },
    "nsgName": {
      "type": "string"
    },
    "clusterName": {
      "type": "string"
    },
    "dnsPrefix": {
      "type": "string"
    },
    "agentPoolVMSize": {
      "type": "string"
    },
    "cachePoolVMSize": {
      "type": "string"
    },
    "gpuPoolVMSize": {
      "type": "string"
    },
    "apimPublisherName": {
      "type": "string"
    },
    "apimPublisherEmail": {
      "type": "string"
    },
    "apimGwHostName": {
      "type": "string"
    },
    "apimMgmtHostName": {
      "type": "string"
    },
    "customDomainHostNameSslCertKeyVaultId": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2024-03-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "kv-nvidia"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "7807142391763981090"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enablePurgeProtection": true,
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "nsgDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "nsgName": {
            "value": "[parameters('nsgName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "securityRules": {
            "value": [
              {
                "name": "AllowCidrBlockCustom80",
                "properties": {
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "10.0.0.0/8",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "80",
                  "direction": "Inbound",
                  "access": "Allow",
                  "priority": 100
                }
              },
              {
                "name": "AllowCidrBlockCustom443",
                "properties": {
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "10.0.0.0/8",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "110",
                  "direction": "Inbound",
                  "access": "Allow",
                  "priority": 110
                }
              },
              {
                "name": "AllowTagCustom3443Inbound",
                "properties": {
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "ApiManagement",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "VirtualNetwork",
                  "destinationPortRange": "3443",
                  "direction": "Inbound",
                  "access": "Allow",
                  "priority": 120
                }
              },
              {
                "name": "AllowCidrBlockCustom31000-31002Inbound",
                "properties": {
                  "protocol": "Tcp",
                  "sourceAddressPrefix": "10.0.0.0/8",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "31000-31002",
                  "direction": "Inbound",
                  "access": "Allow",
                  "priority": 130
                }
              },
              {
                "name": "AllowCidrBlockCustom31000-31002InboundUdp",
                "properties": {
                  "protocol": "Udp",
                  "sourceAddressPrefix": "10.0.0.0/8",
                  "sourcePortRange": "*",
                  "destinationAddressPrefix": "*",
                  "destinationPortRange": "31000-31002",
                  "direction": "Inbound",
                  "access": "Allow",
                  "priority": 140
                }
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "2717575096079712302"
            }
          },
          "parameters": {
            "nsgName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "securityRules": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[parameters('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[parameters('securityRules')]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vnetDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkName": {
            "value": "vnet-nvidia"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "addressPrefixes": {
            "value": [
              "[parameters('vnetAddressPrefix')]"
            ]
          },
          "subnets": {
            "value": [
              {
                "name": "subnet-aks",
                "properties": {
                  "addressPrefix": "[parameters('aksSubnetAddressPrefix')]",
                  "networkSecurityGroup": {
                    "id": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'nsgDeploy'), '2022-09-01').outputs.id.value]"
                  }
                }
              },
              {
                "name": "subnet-waf",
                "properties": {
                  "addressPrefix": "[parameters('wafSubnetAddressPrefix')]"
                }
              },
              {
                "name": "subnet-apim",
                "properties": {
                  "addressPrefix": "[parameters('apimSubnetAddressPrefix')]",
                  "networkSecurityGroup": {
                    "id": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'nsgDeploy'), '2022-09-01').outputs.id.value]"
                  }
                }
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "3956853403732916706"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "addressPrefixes": {
              "type": "array"
            },
            "subnets": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-09-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'nsgDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aksDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "agentVMSize": {
            "value": "[parameters('agentPoolVMSize')]"
          },
          "agentNodeCount": {
            "value": 2
          },
          "agentMaxPods": {
            "value": 30
          },
          "cacheNodeCount": {
            "value": 1
          },
          "cacheVMSize": {
            "value": "[parameters('cachePoolVMSize')]"
          },
          "gpuNodeCount": {
            "value": 1
          },
          "gpuVMSize": {
            "value": "[parameters('gpuPoolVMSize')]"
          },
          "dnsPrefix": {
            "value": "[parameters('dnsPrefix')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/subnet-aks', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2022-09-01').outputs.id.value)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "3967327020380285087"
            }
          },
          "parameters": {
            "clusterName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "dnsPrefix": {
              "type": "string"
            },
            "osDiskSizeGB": {
              "type": "int",
              "defaultValue": 0,
              "minValue": 0,
              "maxValue": 1023
            },
            "agentNodeCount": {
              "type": "int",
              "defaultValue": 3,
              "minValue": 1,
              "maxValue": 50
            },
            "cacheNodeCount": {
              "type": "int"
            },
            "gpuNodeCount": {
              "type": "int"
            },
            "agentMaxPods": {
              "type": "int"
            },
            "agentVMSize": {
              "type": "string"
            },
            "cacheVMSize": {
              "type": "string"
            },
            "gpuVMSize": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2024-06-02-preview",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "aadProfile": {
                  "managed": true,
                  "enableAzureRBAC": true
                },
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "count": "[parameters('agentNodeCount')]",
                    "vmSize": "[parameters('agentVMSize')]",
                    "osType": "Linux",
                    "mode": "System",
                    "maxPods": "[parameters('agentMaxPods')]",
                    "enableAutoScaling": false,
                    "vnetSubnetID": "[parameters('subnetId')]"
                  },
                  {
                    "name": "cachepool",
                    "count": "[parameters('cacheNodeCount')]",
                    "vmSize": "[parameters('cacheVMSize')]",
                    "osType": "Linux",
                    "mode": "User",
                    "enableAutoScaling": false,
                    "vnetSubnetID": "[parameters('subnetId')]"
                  },
                  {
                    "name": "gpupool",
                    "count": "[parameters('gpuNodeCount')]",
                    "vmSize": "[parameters('gpuVMSize')]",
                    "osType": "Linux",
                    "mode": "User",
                    "enableAutoScaling": false,
                    "vnetSubnetID": "[parameters('subnetId')]"
                  }
                ],
                "networkProfile": {
                  "serviceCidr": "10.0.0.0/16",
                  "dnsServiceIP": "10.0.0.10",
                  "networkPolicy": "none"
                }
              },
              "metadata": {
                "description": "User name for the Linux Virtual Machines."
              }
            }
          ],
          "outputs": {
            "controlPlaneFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2024-06-02-preview').fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apimDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "apiManagementServiceName": {
            "value": "apim-nvidia"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "publisherName": {
            "value": "[parameters('apimPublisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('apimPublisherEmail')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/subnet-apim', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2022-09-01').outputs.id.value)]"
          },
          "hostNameConfigurations": {
            "value": [
              {
                "type": "Proxy",
                "hostName": "[parameters('apimGwHostName')]",
                "defaultSslBinding": true,
                "negotiateClientCertificate": false,
                "certificateSource": "KeyVault",
                "keyVaultId": "[parameters('customDomainHostNameSslCertKeyVaultId')]"
              },
              {
                "type": "Management",
                "hostName": "[parameters('apimMgmtHostName')]",
                "certificateSource": "KeyVault",
                "keyVaultId": "[parameters('customDomainHostNameSslCertKeyVaultId')]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "4070164055525988471"
            }
          },
          "parameters": {
            "apiManagementServiceName": {
              "type": "string",
              "defaultValue": "[format('apiservice{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "The name of the API Management service instance"
              }
            },
            "publisherEmail": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "The email address of the owner of the service"
              }
            },
            "publisherName": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "The name of the owner of the service"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Developer",
              "allowedValues": [
                "Consumption",
                "Developer",
                "Basic",
                "Basicv2",
                "Standard",
                "Standardv2",
                "Premium"
              ],
              "metadata": {
                "description": "The pricing tier of this API Management service"
              }
            },
            "skuCount": {
              "type": "int",
              "defaultValue": 1,
              "allowedValues": [
                0,
                1,
                2
              ],
              "metadata": {
                "description": "The instance size of this API Management service."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            },
            "subnetId": {
              "type": "string"
            },
            "hostNameConfigurations": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2024-06-01-preview",
              "name": "[parameters('apiManagementServiceName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[parameters('skuCount')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]",
                "virtualNetworkConfiguration": {
                  "subnetResourceId": "[parameters('subnetId')]"
                },
                "virtualNetworkType": "Internal",
                "hostnameConfigurations": "[parameters('hostNameConfigurations')]"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}', parameters('apiManagementServiceName'), 'http')]",
              "properties": {
                "apiType": "http",
                "displayName": "http",
                "apiRevision": "1",
                "isCurrent": true,
                "path": "",
                "protocols": [
                  "https"
                ],
                "serviceUrl": "https://api.beckerobrien.com",
                "type": "http",
                "subscriptionRequired": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiManagementServiceName'), 'http', 'httpApiGetDeploy')]",
              "properties": {
                "displayName": "Get",
                "method": "GET",
                "urlTemplate": "/*",
                "request": {
                  "queryParameters": []
                },
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success",
                    "representations": []
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), 'http')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiManagementServiceName'), 'http', 'httpApiPutDeploy')]",
              "properties": {
                "displayName": "Put",
                "method": "PUT",
                "urlTemplate": "/*",
                "request": {
                  "queryParameters": []
                },
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success",
                    "representations": []
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), 'http')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiManagementServiceName'), 'http', 'httpApiDeleteDeploy')]",
              "properties": {
                "displayName": "Delete",
                "method": "DEL",
                "urlTemplate": "/*",
                "request": {
                  "queryParameters": []
                },
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success",
                    "representations": []
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), 'http')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2024-06-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiManagementServiceName'), 'http', 'httpApiOptionsDeploy')]",
              "properties": {
                "displayName": "Options",
                "method": "OPT",
                "urlTemplate": "/*",
                "request": {
                  "queryParameters": []
                },
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success",
                    "representations": []
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), 'http')]"
              ]
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName')), '2024-06-01-preview', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appGatewayDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationGatewayName": {
            "value": "appgw-nvidia"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/subnet-waf', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2022-09-01').outputs.id.value)]"
          },
          "minCapacity": {
            "value": 2
          },
          "maxCapacity": {
            "value": 3
          },
          "cookieBasedAffinity": {
            "value": "Disabled"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.31.92.45157",
              "templateHash": "14232293209227216165"
            }
          },
          "parameters": {
            "applicationGatewayName": {
              "type": "string",
              "defaultValue": "applicationGatewayV2",
              "metadata": {
                "description": "Application Gateway name"
              }
            },
            "minCapacity": {
              "type": "int",
              "defaultValue": 2,
              "metadata": {
                "description": "Minimum instance count for Application Gateway"
              }
            },
            "maxCapacity": {
              "type": "int",
              "defaultValue": 10,
              "metadata": {
                "description": "Maximum instance count for Application Gateway"
              }
            },
            "frontendPort": {
              "type": "int",
              "defaultValue": 80,
              "metadata": {
                "description": "Application Gateway Frontend port"
              }
            },
            "backendPort": {
              "type": "int",
              "defaultValue": 443,
              "metadata": {
                "description": "Application gateway Backend port"
              }
            },
            "subnetId": {
              "type": "string"
            },
            "cookieBasedAffinity": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Cookie based affinity"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "appGwPublicIpName": "[format('{0}-pip', parameters('applicationGatewayName'))]",
            "appGwSize": "Standard_v2"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('appGwPublicIpName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2020-06-01",
              "name": "[parameters('applicationGatewayName')]",
              "location": "[parameters('location')]",
              "zones": [
                "1",
                "2",
                "3"
              ],
              "properties": {
                "sku": {
                  "name": "[variables('appGwSize')]",
                  "tier": "Standard_v2"
                },
                "autoscaleConfiguration": {
                  "minCapacity": "[parameters('minCapacity')]",
                  "maxCapacity": "[parameters('maxCapacity')]"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appGatewayFrontendIP",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
                      },
                      "privateIPAddress": "10.2.1.10"
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "appGatewayFrontendPort",
                    "properties": {
                      "port": "[parameters('frontendPort')]"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "appGatewayBackendPool",
                    "properties": {
                      "backendAddresses": [
                        {
                          "fqdn": "apim-gw.beckerobrien.com"
                        }
                      ]
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appGatewayBackendHttpSettings",
                    "properties": {
                      "port": "[parameters('backendPort')]",
                      "protocol": "Https",
                      "cookieBasedAffinity": "[parameters('cookieBasedAffinity')]",
                      "requestTimeout": 20,
                      "pickHostNameFromBackendAddress": true,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('applicationGatewayName'), 'appGatewayProbe')]"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appGatewayHttpListener",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGatewayName'), 'appGatewayFrontendIP')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGatewayName'), 'appGatewayFrontendPort')]"
                      },
                      "protocol": "Http"
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "waf-to-apim-internal",
                    "properties": {
                      "ruleType": "Basic",
                      "priority": 100,
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGatewayName'), 'appGatewayHttpListener')]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'appGatewayBackendPool')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "appGatewayProbe",
                    "properties": {
                      "protocol": "Https",
                      "path": "/",
                      "interval": 30,
                      "timeout": 30,
                      "unhealthyThreshold": 3,
                      "minServers": 1,
                      "pickHostNameFromBackendHttpSettings": true,
                      "match": {
                        "statusCodes": [
                          "200-399"
                        ]
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    }
  ]
}